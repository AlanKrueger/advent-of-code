
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AERODYNAMIC CLOSE_BRACE COLON COMMA EQ GT LT MUSICAL NEWLINE NUMBER OPEN_BRACE SHINY WORD XCOOLfile : workflow_definition_list part_listworkflow_definition_list : workflow_definition_list workflow_definitionworkflow_definition_list : workflow_definitionworkflow_definition : workflow_name OPEN_BRACE rule_list CLOSE_BRACE NEWLINEworkflow_name : WORDrule_list : rule_list COMMA rulerule_list : rulerule : comparison COLON workflow_namerule : workflow_namecomparison : property compare_operator NUMBERproperty : XCOOLproperty : MUSICALproperty : AERODYNAMICproperty : SHINYcompare_operator : GTcompare_operator : LTpart_list : part_list partpart_list : partpart : OPEN_BRACE rating_list CLOSE_BRACE NEWLINErating_list : rating_list COMMA ratingrating_list : ratingrating : property EQ NUMBER'
    
_lr_action_items = {'WORD':([0,2,3,7,10,28,29,36,],[5,5,-3,-2,5,5,5,-4,]),'$end':([1,6,8,11,33,],[0,-1,-18,-17,-19,]),'OPEN_BRACE':([2,3,4,5,6,7,8,11,33,36,],[9,-3,10,-5,9,-2,-18,-17,-19,-4,]),'CLOSE_BRACE':([5,12,13,19,20,21,34,35,37,38,],[-5,24,-21,-9,27,-7,-20,-22,-6,-8,]),'COMMA':([5,12,13,19,20,21,34,35,37,38,],[-5,25,-21,-9,28,-7,-20,-22,-6,-8,]),'XCOOL':([9,10,25,28,],[15,15,15,15,]),'MUSICAL':([9,10,25,28,],[16,16,16,16,]),'AERODYNAMIC':([9,10,25,28,],[17,17,17,17,]),'SHINY':([9,10,25,28,],[18,18,18,18,]),'EQ':([14,15,16,17,18,],[26,-11,-12,-13,-14,]),'GT':([15,16,17,18,23,],[-11,-12,-13,-14,31,]),'LT':([15,16,17,18,23,],[-11,-12,-13,-14,32,]),'COLON':([22,39,],[29,-10,]),'NEWLINE':([24,27,],[33,36,]),'NUMBER':([26,30,31,32,],[35,39,-15,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'file':([0,],[1,]),'workflow_definition_list':([0,],[2,]),'workflow_definition':([0,2,],[3,7,]),'workflow_name':([0,2,10,28,29,],[4,4,19,19,38,]),'part_list':([2,],[6,]),'part':([2,6,],[8,11,]),'rating_list':([9,],[12,]),'rating':([9,25,],[13,34,]),'property':([9,10,25,28,],[14,23,14,23,]),'rule_list':([10,],[20,]),'rule':([10,28,],[21,37,]),'comparison':([10,28,],[22,22,]),'compare_operator':([23,],[30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> workflow_definition_list part_list','file',2,'p_file','run.py',85),
  ('workflow_definition_list -> workflow_definition_list workflow_definition','workflow_definition_list',2,'p_workflow_definition_list_recursion','run.py',90),
  ('workflow_definition_list -> workflow_definition','workflow_definition_list',1,'p_workflow_definition_list_terminator','run.py',95),
  ('workflow_definition -> workflow_name OPEN_BRACE rule_list CLOSE_BRACE NEWLINE','workflow_definition',5,'p_workflow_definition','run.py',100),
  ('workflow_name -> WORD','workflow_name',1,'p_workflow_name','run.py',105),
  ('rule_list -> rule_list COMMA rule','rule_list',3,'p_rule_list_recursion','run.py',110),
  ('rule_list -> rule','rule_list',1,'p_rule_list_terminator','run.py',115),
  ('rule -> comparison COLON workflow_name','rule',3,'p_rule_with_comparison','run.py',120),
  ('rule -> workflow_name','rule',1,'p_rule_default','run.py',125),
  ('comparison -> property compare_operator NUMBER','comparison',3,'p_comparison','run.py',130),
  ('property -> XCOOL','property',1,'p_property_x','run.py',135),
  ('property -> MUSICAL','property',1,'p_property_m','run.py',139),
  ('property -> AERODYNAMIC','property',1,'p_property_a','run.py',143),
  ('property -> SHINY','property',1,'p_property_s','run.py',147),
  ('compare_operator -> GT','compare_operator',1,'p_compare_operator_gt','run.py',151),
  ('compare_operator -> LT','compare_operator',1,'p_compare_operator_lt','run.py',155),
  ('part_list -> part_list part','part_list',2,'p_part_list_recursion','run.py',159),
  ('part_list -> part','part_list',1,'p_part_list_termination','run.py',164),
  ('part -> OPEN_BRACE rating_list CLOSE_BRACE NEWLINE','part',4,'p_part','run.py',169),
  ('rating_list -> rating_list COMMA rating','rating_list',3,'p_rating_list_recursion','run.py',174),
  ('rating_list -> rating','rating_list',1,'p_rating_list_termination','run.py',179),
  ('rating -> property EQ NUMBER','rating',3,'p_rating','run.py',184),
]
